@page "/request-rules"
@inject IDialogService DialogService
@using ProjectC.Client.Components;

<MudGrid Spacing="2" Class="mt-5">
    <MudItem sm="6">
        <div class="mb-5">
            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" OnClick="DeleteRequestEventsAsync"></MudIconButton>
        </div>
        <RequestEventsComponent @ref="RequestEventsComponent"></RequestEventsComponent>
    </MudItem>
    <MudItem sm="6">
        <div class="d-flex justify-end mb-5">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddRequestRuleAsync">Add Rule</MudButton>
        </div>
        <RequestRulesComponent @ref="RequestRulesComponent"></RequestRulesComponent>
    </MudItem>
</MudGrid>

@code {
    private RequestRulesComponent? RequestRulesComponent;
    private RequestEventsComponent? RequestEventsComponent;

    private async Task AddRequestRuleAsync()
    {
        var dialog = await DialogService.ShowAsync<RequestRuleEditFormComponent>("Request Rule", DialogUtils.DefaultDialogOptions);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            if (RequestRulesComponent is not null)
            {
                await RequestRulesComponent.RefreshRequestRulesAsync();
            }
        }
    }

    private async Task DeleteRequestEventsAsync()
    {
        if (RequestEventsComponent is not null)
        {
            await RequestEventsComponent.DeleteRequestEventsAsync();
        }
    }
}
